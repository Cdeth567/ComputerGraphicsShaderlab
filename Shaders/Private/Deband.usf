// Deband.usf
#include "/Engine/Private/Common.ush"
#include "/Engine/Private/SceneTexturesCommon.ush"


void MainVS(
    in float4 InPosition : ATTRIBUTE0,
	in float2 InTexCoord : ATTRIBUTE1,
	out noperspective float4 OutUVAndScreenPos : TEXCOORD0,
	out float4 OutPosition : SV_POSITION)
{
    DrawRectangle(InPosition, InTexCoord, OutPosition, OutUVAndScreenPos);
}

// Uniform parameters
float SearchRadius;
float BitDepth;
int AutomateBitDepth;
int DebandMode;
int SkyOnly;

// Main pixel shader
float4 MainPS(
    in float4 InPosition : SV_Position,
    in float4 InUV : TEXCOORD0
) : SV_Target0
{
    float3 OutColor = CalcSceneColor(InUV.xy);
    
    const float2 magicdot = float2(0.75487766624669276, 0.569840290998);
    const float3 magicadd = float3(0, 0.025, 0.0125) * dot(magicdot, 1);
    float3 dither = frac(dot(InPosition.xy, magicdot) + magicadd);

    if(SkyOnly == 1)
    {
        float depth = CalcSceneDepth(InUV.xy);
        if(depth < 0.98) return float4(OutColor, 1.f);
    }

    float actualBitDepth = AutomateBitDepth == 1 ? 8.0 : BitDepth;
    float lsb = rcp(exp2(actualBitDepth) - 1.0);

    if(DebandMode == 2)
    {
        float2 shift;
        sincos(6.283 * 30.694 * dither.x, shift.x, shift.y);
        shift = shift * sqrt(dither.y);

        float3 scatter = CalcSceneColor(InUV.xy + shift * 0.025 * SearchRadius);
        float4 diff; 
        diff.rgb = abs(OutColor.rgb - scatter);
        diff.w = max(max(diff.x, diff.y), diff.z);

        OutColor = lerp(OutColor, scatter, diff.w <= lsb);
    }
    else if(DebandMode == 1)
    {
        OutColor += (dither - 0.5) * lsb;
    }
    return float4(OutColor, 1.f);
}